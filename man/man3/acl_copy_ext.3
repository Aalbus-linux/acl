.TH ACL_COPY_EXT 3
.SH NAME
acl_copy_ext, acl_copy_int \- copy ACL from system to user space or from user to system space
.SH SYNOPSIS
.B #include <sys/acl.h>
.PP
.B "ssize_t acl_copy_ext(void *bufp, struct acl *aclp, ssize_t size);"
.br
.B struct acl *acl_copy_int(void *bufp);
.SH DESCRIPTION
\f2acl_copy_ext\fP sets \f2*bufp\fP to \f2*aclp\fP if the arguments are valid.  
\f2acl_copy_int\fP allocates a \f2struct acl\fP and copies the \f2struct acl\fP
pointed to by
\f2*bufp\fP into it, if the arguments are valid.  The storage should
be freed by calling \f2acl_free\fP(3) when no longer needed.
.PP
In the
POSIX specifications, the internal form of an ACL may be different from the
external form, hence the need for these functions.  In IRIX, both forms are
the same.
.SH RETURN VALUES
.I acl_copy_ext
returns \f2sizeof(struct acl)\fP in the normal case,
or -1 if \f2aclp\fP is null.
.PP
.I acl_copy_int
returns \f2aclp\fP in the normal case or \f2(struct acl *)0\fP if the
arguments are invalid.
.SH ERRORS
.I acl_copy_ext:
.TP 16
EINVAL 
\f2aclp\fP is null or \f2bufp\fP is null or \f2size\fP is 0 or negative.
.TP 16
ERANGE
\f2size\fP is less than \f2sizeof(struct acl)\fP
.PP
.I acl_copy_int:
.TP 16
EINVAL
\f2bufp\fP is null
.TP 16
ENOMEM
memory allocation failure
