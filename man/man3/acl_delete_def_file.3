.\" Access Control Lists manual pages
.\"
.\" (C) 2002 Andreas Gruenbacher, <a.gruenbacher@computer.org>
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.TH ACL_DELETE_DEF_FILE 3 "Linux ACL Library" "March 2002" "Access Control Lists"
.SH NAME
acl_delete_def_file \- delete a default ACL by filename
.SH LIBRARY
Linux Access Control Lists library (libacl, \-lacl).
.SH C SYNOPSIS
.sp
.nf
.B #include <sys/types.h>
.B #include <sys/acl.h>
.sp
.B "int acl_delete_def_file (const char *\f2path_p\f3);"
.Op
.SH DESCRIPTION
The
.B acl_delete_def_file
function deletes a default ACL from the directory whose pathname is pointed to by the argument
.IR path_p .
.PP
The effective user ID of the process must match the owner of the file or
directory or the process must have the CAP_FOWNER capability for the
request to succeed.
.PP
If the argument
.I path_p
is not a directory, then the function fails. It is no error if the directory whose pathname is pointed to by the argument
.I path_p
does not have a default ACL.
.SH RETURN VALUE
The value 0 is returned if successful; otherwise the value -1 is
returned and the global variable errno is set to indicate the error.
.SH ERRORS
If any of the following conditions occur, the
.B acl_delete_def_file
function returns the value -1 and and sets
.B errno
to the corresponding value:
.TP
.SM
\%[EINVAL]
The file referred to by
.I path_p
is not a directory.
.TP
.SM
\%[EPERM]
The process does not have appropriate privilege to perform the operation to delete the default ACL.
.TP
.SM
\%[EROFS]
This function requires modification of a file system which is currently read-only.
.TP
.SM
\%[ENOTSUP]
The file system on which the file identified by
.I path_p
is located does not support ACLs, or ACLs are disabled.
.SH STANDARDS
IEEE Std 1003.1e draft 17 (\(lqPOSIX.1e\(rq, abandoned)
.SH AUTHOR
Derived from the FreeBSD manual pages written by
.IR "Robert N M Watson" ;
and adapted for Linux by
.I "Andreas Gruenbacher"
<a.gruenbacher@computer.org>.
.SH SEE ALSO
.BR acl_get_file (3),
.BR acl_set_file (3),
.BR acl (5)
