.\" Access Control Lists manual pages
.\"
.\" (C) 2002 Andreas Gruenbacher, <a.gruenbacher@computer.org>
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.TH ACL_GET_FILE 3 "Linux ACL Library" "March 2002" "Access Control Lists"
.SH NAME
acl_get_file \- get an ACL by filename
.SH LIBRARY
Linux Access Control Lists library (libacl, \-lacl).
.SH C SYNOPSIS
.sp
.nf
.B #include <sys/types.h>
.B #include <sys/acl.h>
.sp
.B "acl_t acl_get_file (const char *\f2path_p\f3, acl_type_t \f2type\f3);"
.Op
.SH DESCRIPTION
The
.B acl_get_file
function retrieves the access ACL associated with a file or directory, or the default ACL associated with a directory. The pathname for the file or directory is pointed to by the argument
.IR path_p .
The ACL is placed into working storage and
.B acl_get_file
returns a pointer to that storage.
.PP
In order to read an ACL from an object, a process must have read access to
the object's attributes.
.PP
The value of the argument
.I type
is used to indicate whether the access ACL or the default ACL associated with
.I path_p
is returned. If
.I type
is ACL_TYPE_ACCESS, the access ACL of
.I path_p
is returned.
If
.I type
is ACL_TYPE_DEFAULT, the default ACL of
.I path_p
is returned.
If
.I type
is TYPE_DEFAULT and no default ACL is associated with
.IR path_p ,
then an ACL containing zero ACL entries is returned.
.PP
This function may cause memory to be allocated.  The caller should free any
releasable memory, when the new ACL is no longer required, by calling
.BR acl_free (3)
with the (void*)acl_t returned by
.B acl_get_file
as an argument.
.SH RETURN VALUE
Upon successful completion, this function returns a pointer to the
working storage.  Otherwise, a value of (acl_t)NULL is returned, and
.B errno
is set to indicate the error.
.SH ERRORS
If any of the following conditions occur, the
.B acl_get_file
function returns a value of (acl_t)NULL and sets
.B errno
to the corresponding value:
.TP
.SM
\%[EINVAL]
The argument
.I type
is not ACL_TYPE_ACCESS or ACL_TYPE_DEFAULT.
.TP
.SM
\%[ENOMEM]
The ACL working storage requires more memory than is allowed by the hardware or system-imposed memory management constraints.
.TP
.SM
\%[ENOTSUP]
The file system on which the file identified by
.I path_p
is located does not support ACLs, or ACLs are disabled.
.SH STANDARDS
IEEE Std 1003.1e draft 17 (\(lqPOSIX.1e\(rq, abandoned)
.SH AUTHOR
Derived from the FreeBSD manual pages written by
.IR "Robert N M Watson" ;
and adapted for Linux by
.I "Andreas Gruenbacher"
<a.gruenbacher@computer.org>.
.SH SEE ALSO
.BR acl_get_fd (3),
.BR acl_set_file (3),
.BR acl (5)
