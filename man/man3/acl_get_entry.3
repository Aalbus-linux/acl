.\" Access Control Lists manual pages
.\"
.\" (C) 2002 Andreas Gruenbacher, <a.gruenbacher@computer.org>
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.TH ACL_GET_ENTRY 3 "Linux ACL Library" "March 2002" "Access Control Lists"
.SH NAME
acl_get_entry \- get an ACL entry
.SH LIBRARY
Linux Access Control Lists library (libacl, \-lacl).
.SH C SYNOPSIS
.sp
.nf
.B #include <sys/types.h>
.B #include <sys/acl.h>
.sp
.B "int acl_get_entry (acl_t \f2acl\f3, int \f2entry_id\f3, "
.B "                   acl_entry_t *\f2entry_p\f3);"
.Op
.SH DESCRIPTION
The
.B acl_get_entry
function obtains a descriptor for an ACL entry as specified by
.I entry_id
within the ACL indicated by the argument
.IR acl .
If the value of
.I entry_id
is ACL_FIRST_ENTRY, then the function returns in
.I entry_p
a descriptor for the first ACL entry within
.IR acl .
If the value of 
.I entry_id 
is ACL_NEXT_ENTRY, then the function returns in
.I entry_p 
a descriptor for the next ACL entry within
.IR acl .
.PP
If a call is made to
.B acl_get_entry
with
.I entry_id
set to ACL_NEXT_ENTRY when there has not been either an initial
successful call to
.BR acl_get_entry ,
or a previous successful call to
.B acl_get_entry
following a call to
.BR acl_calc_mask (3),
.BR acl_copy_int (3),
.BR acl_create_entry (3),
.BR acl_delete_entry (3),
.BR acl_dup (3),
.BR acl_from_text (3),
.BR acl_get_fd (3),
.BR acl_get_file (3),
.BR acl_set_fd (3),
.BR acl_set_file (3),
or
.BR acl_valid (3),
then the effect is unspecified.
.PP
Calls to
.B acl_get_entry
do not modify any ACL entries. Subsequent operations using the returned
ACL entry descriptor operate on the ACL entry within the ACL in working
storage. The order of all existing entries in the ACL remains unchanged.
Any existing ACL entry descriptors that refer to entries within the ACL
continue to refer to those entries. Any existing ACL pointers that refer
to the ACL referred to by
.I acl
continue to refer to the ACL.
.SH RETURN VALUE
If the function successfully obtains an ACL entry, the function returns a
value of 1.
If the ACL has no ACL entries, the function returns the value 0.
If the value of
.I entry_id
is ACL_NEXT_ENTRY and the last ACL entry in the ACL has already been
returned by a previous call to
.BR acl_get_entry ,
the function returns the value 0 until a successful call with an
.I entry_id
of ACL_FIRST_ENTRY is made. Otherwise, the value -1
is returned and errno is set to indicate the error.
.SH ERRORS
If any of the following conditions occur, the
.B acl_get_entry
function returns -1 and sets
.B errno
to the corresponding value:
.TP
.SM
\%[EINVAL]
The argument
.I acl_p
is not a valid pointer to an ACL.
.TP
.SM
\%[EINVAL]
The argument
.I entry_id
is neither ACL_NEXT_ENTRY nor ACL_FIRST_ENTRY.
.SH STANDARDS
IEEE Std 1003.1e draft 17 (\(lqPOSIX.1e\(rq, abandoned)
.SH AUTHOR
Derived from the FreeBSD manual pages written by
.IR "Robert N M Watson" ;
and adapted for Linux by
.I "Andreas Gruenbacher"
<a.gruenbacher@computer.org>.
.SH SEE ALSO
.BR acl_create_entry (3),
.BR acl_copy_entry (3),
.BR acl_delete_entry (3),
.BR acl (5)
